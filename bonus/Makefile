# Makefile pour le bonus du projet Inception-of-Things
# Int√©gration GitLab avec ArgoCD

# Variables
NAMESPACE=gitlab
APP_NAME=app-gitlab
PORT_GITLAB=8929
PORT_ARGOCD=8080

# Cibles principales
.PHONY: all clean install configure prepare-repo setup-argocd test help access-gitlab access-argocd

all: install

# Installation de GitLab
install:
	@echo "üì¶ Installation de GitLab dans le namespace $(NAMESPACE)..."
	@./scripts/install_gitlab_minimal.sh

# Configuration de GitLab et r√©cup√©ration du mot de passe
configure:
	@echo "üîß Configuration de GitLab..."
	@./scripts/configure_gitlab.sh

# Acc√®s √† GitLab via port-forward
launch:
	@echo "üîó Acc√®s √† GitLab via port-forward..."
	@echo "üìù URL: http://localhost:$(PORT_GITLAB)"
	@echo "üë§ Utilisateur: root"
	@echo "üîë Mot de passe: (fourni par make configure)"
	@echo "‚ö†Ô∏è Appuyez sur Ctrl+C pour quitter"
	@kubectl port-forward -n $(NAMESPACE) svc/gitlab $(PORT_GITLAB):80

# Acc√®s √† ArgoCD via port-forward
access-argocd:
	@echo "üîó Acc√®s √† ArgoCD via port-forward..."
	@echo "üìù URL: http://localhost:$(PORT_ARGOCD)"
	@echo "‚ö†Ô∏è Appuyez sur Ctrl+C pour quitter"
	@kubectl port-forward -n argocd svc/argocd-server $(PORT_ARGOCD):443

# Pr√©paration du d√©p√¥t Git
prepare-repo:
	@echo "üóÇÔ∏è Pr√©paration du d√©p√¥t Git pour ArgoCD..."
	@./scripts/prepare_git_repo.sh

# Configuration d'ArgoCD avec GitLab
setup-argocd:
	@echo "üîÑ Configuration d'ArgoCD avec GitLab..."
	@./scripts/setup_argocd_gitlab.sh

# Test du d√©ploiement et mise √† jour
test:
	@echo "üß™ Test du d√©ploiement et du processus de mise √† jour..."
	@echo "Pour mettre √† jour l'application de v1 √† v2:"
	@echo "1. Allez dans votre d√©p√¥t Git"
	@echo "2. Modifiez l'image: sed -i 's/wil42\\/playground:v1/wil42\\/playground:v2/g' kubernetes/deployment.yaml"
	@echo "3. Commitez et poussez les changements"
	@echo "4. V√©rifiez la synchronisation dans ArgoCD"
	@echo "Pour acc√©der √† ArgoCD, utilisez: make access-argocd"

# V√©rifier l'√©tat de GitLab
check-gitlab:
	@echo "üîç V√©rification de l'√©tat de GitLab..."
	@kubectl -n gitlab get pods
	@kubectl -n gitlab logs deployment/gitlab --tail=20
	@echo "üëâ Pour v√©rifier l'initialisation compl√®te, cherchez 'gitlab Reconfigured!' dans les logs"
	@echo "Pour voir les logs complets: kubectl -n gitlab logs deployment/gitlab -f"

# Nettoyage
clean:
	@echo "üßπ Nettoyage du bonus..."
	@kubectl delete ns $(NAMESPACE) --grace-period=0 --force 2>/dev/null || true
	@echo "‚úÖ Nettoyage termin√©."

# Afficher l'aide
help:
	@echo "üìö Aide du Makefile pour le bonus IoT:"
	@echo "  make               - Installation de GitLab"
	@echo "  make install       - Installation de GitLab"
	@echo "  make configure     - Configuration de GitLab et r√©cup√©ration du mot de passe"
	@echo "  make launch - Acc√©der √† GitLab via port-forward"
	@echo "  make access-argocd - Acc√©der √† ArgoCD via port-forward"
	@echo "  make prepare-repo  - Pr√©paration du d√©p√¥t Git pour ArgoCD"
	@echo "  make setup-argocd  - Configuration d'ArgoCD avec GitLab"
	@echo "  make test          - Test du d√©ploiement et du processus de mise √† jour"
	@echo "  make clean         - Nettoyage du bonus"
	@echo "  make help          - Afficher cette aide"